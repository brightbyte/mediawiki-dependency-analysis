<?php
/**
 * This file is part of PhpTangle.
 *
 * @license LGPL 2+
 * @author Daniel Kinzler
 */

namespace MediaWiki\DependencyAnalysis;

use Symfony\Component\Console\Command\Command;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Finder\Finder;

/**
 * CLI command for extracting metrics.
 */
class MetricsCommand extends Command {

	/**
	 * Analyze constructor.
	 */
	public function __construct() {
		parent::__construct();
	}

	public function configure() {
		$this->setName( 'metrics' );
		$this->setDescription( 'Generate cyclic dependency metrics' );
		$this->setHelp( 'This command extracts metrics from a JSON report generated by phpda.' );
		$this->addArgument( 'file', InputArgument::REQUIRED, 'The file to analyze.' );
		$this->addArgument( 'directory', InputArgument::REQUIRED, 'The directory to write to.' );

	}

	public function execute( InputInterface $input, OutputInterface $output ) {
		$file = $input->getArgument( 'file' );
		$dir = $input->getArgument( 'directory' );

		$metrics = $this->extractMetrics( $file );
		$this->writeMetricsJson( $metrics, "$dir/metrics.json" );
		$this->writeMetricsHtml( $metrics, "$dir/metrics.html" );
	}
	
	public function extractMetrics( $file ) {
		$json = file_get_contents( $file );
		$data = json_decode( $json );
		
		$metrics = [];
		$metrics['number-of-cycles'] = count( $data->cycles );
		
		return $metrics;
	}
	
	public function writeMetricsJson( $metrics, $outFile ) {
		file_put_contents( $outFile, json_encode( $metrics ) );
	}

	public function writeMetricsHtml( $metrics, $outFile ) {
		$template = __DIR__ . '/metrics.mustache';
		$mustache = file_get_contents( $template );
		
		$m = new \Mustache_Engine();
		file_put_contents( $outFile, $m->render( $mustache, $metrics ) );
	}

}
